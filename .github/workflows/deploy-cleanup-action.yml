name: Deploy
run-name: "Deploy ${{ github.ref_name }} to production by ${{ github.actor }}"

on:
  workflow_call:
    inputs:
      env:
        description: Deploy environment
        required: true
        type: string
      images:
        description: Newline separated list of docker images to tag and cleanup
        required: true
        type: string
    secrets:
      TGOPS_TOKEN:
        required: true
      DEPLOY_TOKEN:
        required: true

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.images.outputs.image_array }}
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - uses: tweedegolf/create-tag-action@main
      - id: tag
        run: echo "tag=$(printf "$tag")" >> "$GITHUB_OUTPUT"
        shell: bash
        env:
          tag: ${{ env.tag }}
      - id: images
        run: echo "image_array=$(printf "$image_list" | jq  --raw-input .  | jq --slurp -c .)" >> "$GITHUB_OUTPUT"
        shell: bash
        env:
          image_list: ${{ inputs.images }}

  tag:
    name: ${{ matrix.images }}
    needs: init
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        images: ${{fromJson(needs.init.outputs.images)}}
    steps:
      - uses: actions/checkout@v4
      - uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository_owner }}/${{ matrix.images }}
          target: ${{ needs.init.outputs.tag }}
          tags: ${{ inputs.env }}-${{ needs.init.outputs.tag }}

  deploy:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: tweedegolf/tgops-deploy-action@main
        with:
          env: ${{ inputs.env }}
          tgops-token: ${{ secrets.TGOPS_TOKEN }}
          deploy-token: ${{ secrets.DEPLOY_TOKEN }}

  cleanup:
    name: ${{ matrix.images }}
    needs: [tag, init]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        images: ${{fromJson(needs.init.outputs.images)}}
    steps:
      - uses: "tweedegolf/cleanup-images-action@main"
        with:
          package: ${{ matrix.images }}
          filters: |-
            ^\d+-\w+$
            ^production-\d+-\w+$
            ^preview-\d+-\w+$
            ^staging-\d+-\w+$
          keep_n: 2
      - uses: "tweedegolf/cleanup-untagged-images-action@main"
        with:
          package: ${{ matrix.images }}
